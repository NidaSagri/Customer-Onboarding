# Set the public-facing port for the entire application
server.port=8080
spring.application.name=API-GATEWAY

# --- Eureka Client Configuration (This is correct) ---
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.instance.hostname=localhost


# --- THE DEFINITIVE FIX: EXPLICIT DISCOVERY-CLIENT-ENABLED ROUTING ---
# This line tells the gateway to actively use the Eureka discovery client for routing.
spring.cloud.gateway.discovery.locator.enabled=true

# The serviceId in the URI (e.g., kyc-service) MUST BE LOWERCASE here.
# This is a convention for the discovery locator.
# The locator will automatically find the corresponding uppercase service name in Eureka.

# Route 1: All UI, security, and KYC API traffic to kyc-service
spring.cloud.gateway.routes[0].id=kyc-service-route
spring.cloud.gateway.routes[0].uri=lb://kyc-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/ui/**, /login, /logout, /dashboard, /admin/**, /customer/**, /api/kyc/**, /css/**, /images/**

# Route 2: Account management API traffic to account-service
spring.cloud.gateway.routes[1].id=account-service-route
spring.cloud.gateway.routes[1].uri=lb://account-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/accounts/**

# Route 3: Chatbot API traffic, which is handled by kyc-service
spring.cloud.gateway.routes[2].id=chatbot-route
spring.cloud.gateway.routes[2].uri=lb://kyc-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/chatbot/**