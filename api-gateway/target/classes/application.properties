# Set the public-facing port for the entire application
server.port=8080
spring.application.name=API-GATEWAY

# --- Eureka Client Configuration ---
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.instance.hostname=localhost

# --- Enable Discovery-Client-based Routing ---
spring.cloud.gateway.discovery.locator.enabled=true

# ***************************************************************
# ***                     THIS IS THE FIX                       ***
# ***************************************************************
# Increase the response timeout for the underlying Netty HTTP client.
# This gives downstream services (like kyc-service) more time to send
# large responses (e.g., pages with Base64 images) back to the gateway.
# The default is very short, causing "PrematureCloseException".
# Setting it to 60 seconds (60000ms) is a robust value for development.
spring.cloud.gateway.httpclient.response-timeout=60000


# --- Route Definitions ---
# Route 1: All UI, security, and KYC API traffic to kyc-service
spring.cloud.gateway.routes[0].id=kyc-service-route
spring.cloud.gateway.routes[0].uri=lb://kyc-service
# *** ADD THE NEW PATH HERE ***
spring.cloud.gateway.routes[0].predicates[0]=Path=/ui/**, /login, /logout, /dashboard, /admin/**, /customer/**, /api/applications/**, /css/**, /images/**
# Route 2: All internal and admin API traffic for customer-service
spring.cloud.gateway.routes[1].id=customer-service-route
spring.cloud.gateway.routes[1].uri=lb://customer-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/internal/customers/**, /api/admin/customers/**

# Route 3: All API traffic for account-service
spring.cloud.gateway.routes[2].id=account-service-route
spring.cloud.gateway.routes[2].uri=lb://account-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/internal/accounts/**

# Route 4: Chatbot API traffic, which is handled by the Python service (proxied through kyc-service for simplicity in some setups, but better to route directly if possible)
# For now, we assume it's handled by the kyc-service as per your original config
spring.cloud.gateway.routes[3].id=chatbot-route
spring.cloud.gateway.routes[3].uri=lb://kyc-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/chatbot/**